Transform: AWS::Serverless-2016-10-31

# Globals:
#   set of globals

# Description:
#   String

# Metadata:
#   template metadata

Parameters:
  EMRDeploy:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
  InstanceType:
    Type: String
  NumCoreInstances:
    Type: Number
    Default: 1
  ReleaseLabel:
    Type: String
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName

Conditions:
  EMRDeployTrue: 
    !Equals
      - 'true'
      - !Ref EMRDeploy

Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${AWS::StackName}-emr-${AWS::AccountId}'

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsHostnames: true
      CidrBlock: 10.1.0.0/16
  
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.0.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  EmrRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2008-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: 'elasticmapreduce.amazonaws.com'
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole'

  EmrEc2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2008-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: 'ec2.amazonaws.com'
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role'

  EmrEc2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref EmrEc2Role

  EmrMasterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Authorise cluster access via SSH
        VpcId: !Ref VPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  EmrCluster:
    Type: AWS::EMR::Cluster
    Condition: EMRDeployTrue
    Properties:
      Applications:
        - Name: Spark
        - Name: Hive
      Instances:
        MasterInstanceGroup:
          InstanceCount: 1
          InstanceType: !Ref InstanceType
          Market: ON_DEMAND
          Name: !Sub '${AWS::StackName}-master'
        CoreInstanceGroup:
          InstanceCount: !Ref NumCoreInstances
          InstanceType: !Ref InstanceType
          Market: ON_DEMAND
          Name: !Sub '${AWS::StackName}-core'
        Ec2SubnetId: !Ref PublicSubnet
        Ec2KeyName: !Ref KeyName
        AdditionalMasterSecurityGroups:
          - !Ref EmrMasterSecurityGroup
      Name: CFNtest
      JobFlowRole: !Ref EmrEc2InstanceProfile
      ServiceRole: !Ref EmrRole
      ReleaseLabel: !Ref ReleaseLabel
      VisibleToAllUsers: true 
